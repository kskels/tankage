===----------------------------------------------------------------*- org -*-===
                                      TODO
===--------------------------------------------------------------------------===

* First Working Prototype, Novemeber 4th
** DONE Two snails (human vs. human)
*** DONE Keyboard map
** DONE One unlimited weapon
** DONE Take damage and die
*** DONE Snails have health which can be decreased
*** DONE Trigger event on death
** DONE Display health
*** DONE A meter that displays the hearts
*** DONE Create heart graphics
*** DONE Update health meter using snail's health level
** DONE Cactus generator
*** DONE Add cactus type
*** DONE Create the generator
** DONE Snail agnostic weapons
*** DONE Weapons have direction and position
** DONE Restrict window size

* First Alpha, December 16th
** DONE Orient bullet sprites correctly
** DONE Improve existing graphics
*** DONE Cactus graphics
*** DONE Second snail
** DONE Health bar animations (when low on health)
** DONE Improve collision detection
*** DONE Better-fitting collision areas
*** DONE More collision areas (body, helmet)
** TODO Blood splatter (particle system)
** DONE Extend arsenal with rocket launcher
*** DONE Create rocket projectile
**** DONE Graphics (the rocket + smoketrail [particle system])
**** DONE Physics
**** DONE Logic	(homing)
*** DONE A new weapon: rocket launcher
**** WONT Graphics for the weapon
**** DONE When out of rockets, switch to first weapon	 
** DONE Power-ups
*** DONE Rocket launcher (or additional rockets)
**** DONE Graphics    
*** DONE Replenish some of the health
**** DONE Power-up graphics    
**** DONE A cool animation on the health bar?     
** DONE Helmets
*** DONE Helmets kill bullets and protect the snail   
*** DONE Add a small impulse to the player when its helmet is hit
*** DONE Helmets take x amount of damage until they expire	
** TODO Run on Windows
** DONE Destructible cactii
*** DONE New graphics
**** DONE Somewhat damaged, broken in half, stub
*** DONE Detect bullet collisions
*** DONE Remove phys geom when dead    
** DONE Shouldn't be possible to shoot when dead
** DONE Point of contact in geom collisions
** DONE Restore snail collision response
** TODO Get hurt by cactii
** TODO Minimum amount of time between taking damage
*** A way to messure time is needed. how should it be done? preferably not centralized   
*** Timers?
* Major Beta, January 20th
** TODO Sprite animations
*** TODO Shooting
*** TODO Getting hit
** Helmets can detach from snail and then be picked-up again
** Collect feedback from first alpha
** Proper player input configuration
*** Draw graphics for menu
*** Create menu    
** AI
** New power-ups
*** An "IQ booster" that improves the AI for a certain amount of time. Nothing happens to the player, though
*** The walker    
** Menu system   
** Rounds (3 rounds per game)
** Sprite animations
*** Idle animation
** Improve graphics
** Use bundle on Mac OS X
* Engine
** DONE Platform-independent rendering in components (not in the gfx subsystem)
** DONE Build: verify that TR1 can be used for smart pointers using a code test
** DONE Build: detect whether there are smart pointer implementations in std::
** DONE Implement new design regarding rendering context, renderers, meshes, etc.
** DONE Remove friend for Sprite, add sprite event handler.
** TODO Add correct event handling (multitargets)
** DONE Verify that smartptrs are implemented by boost   
** DONE Remove the old way of doing rendering
** DONE Implement SpriteCuller
** DONE Use Mesh and renderer, create a TextureRenderer
** TODO Add doxygen comments
** Unit tests using Gtest
*** DONE Unittests for mat, vec, rect in utils
** TODO Create renderer factory with cache
** DONE Use environment variable to toggle rendering of geoms
** DONE Geom offset   
** TODO SDL support
** TODO ImageIO support
** TODO SDL_image support
** TODO Fix design of physical geoms. it's borken
** DONE AtlasSprite, setup a grid and select cell. put it in sprite
** DONE Geoms should have a priority
** TODO Finer collision areas for geoms (one big-pass, then a finer-grained pass customized by the geom)
** TODO Update the logic at a certain interval
** TODO Update next state instead of current state in logic, let graphics interpolate (?)
** DONE Two sprites, one delegate of the other, shouldn't flicker when moving together
** TODO Should GraphicsContext really work by binding?   
** TODO Should event handling really need subclassing???
** TODO Pick sprite cell from orientation   
** TODO enqueueRender member functions are not that efficient, improve!
*** Store vertices internally? Add vertices to a generic interface class?   
** DONE setPosition/setOrientation -> setReferenceFrame
** TODO Improve engine in general (file headers, function documentation)
** DONE Investigate whether an object should aggregate a coordsys instead of inherit
** TODO Redo collision response using collision categories/types
** DONE Projectile class (bullet and missile are projectiles)
** DONE ProjectileWeapon class    
** TODO Sprite should not know about cells, but offsets and widths. maybe sprites
   can get a transformation from a CoordSystem for the offsets
** TODO Rename mat2 -> Matrix2, vec2 -> Vector2, etc. so it conforms to style
** TODO Invert dependency of renderable <-> renderlist. list.insert(object) (?)
   Do some research on this. Push or pull?
** TODO Optimize performance of enqueueRender, Mesh, etc. No copies!
** TODO Message boxes in Windows for displaying errors   
** Improve build based on CMake
*** DONE CMake should create and use 'bin' and 'build' directories 
*** TODO Investigate how-to report CMake error and get rid of gen files
*** DONE Investigate how-to create debian packages and which tool to use
*** DONE Add CMake find module for Google C++ Testing Framework 
*** TODO Make CMake output more pretty for the smart ptr detection
*** DONE Make GTest targets optional 
*** DONE Figure out how to create folders with debian package. Sort of weird
         generator because make install succeeds but not in the package
         (added kind a hack with preinst and postrm scripts)
*** DONE Find out a way to change install prefix for debian package. Default
         variable CMAKE_INSTALL_PREFIX doesn't work for some reason. Again,
         default make install works but in the package it's lost
         (you are not suppose to change path in the ready made package)
*** DONE List and configure Ubuntu dependencies for debian package
*** DONE Add resource path define in config.h.in and build/CMakeLists.txt 
*** DONE Update code to use resource path
*** DONE Add support for other CPack generators, like Bundle
**** DONE Investigate if a CPack generator can be picked by default, so we support package generation on all platforms CPack supports
*** TODO DEV-flag should set -g flag when using gcc (but not when using Visual Studio)
** TODO New Engine
*** DONE Cactii
*** DONE Shooting
*** DONE Items
*** DONE Collision detection
*** DONE Collision response    
*** TODO Health + healthbar
*** TODO The rockets    
*** TODO Particle system
*** TODO Add "error dialog box" to window managers, for displaying errors.    
** DONE TextureLoader
** DONE Smoke trails for bullets   
** TODO Slight aiming
** TODO Android support
*** TODO Cmake
*** TODO Window Manager support
*** TODO OpenGLES
*** TODO Image Loader    
*** TODO Input    
** TODO System profile
** TODO Find out why game takes 60% of 2GHz duo core processor resources
** TODO Fix a proper icon for the OS X bundle   
